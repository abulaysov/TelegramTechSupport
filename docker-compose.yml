version: '3'

services:
  tts-nginx:
    image: nginx:1.25-alpine
    container_name: tts-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
    depends_on:
      - tts-backend
    profiles:
      - prod

  tts-backend: &backend
    image: abulaysov/tts-backend
    restart: unless-stopped
    container_name: tts-backend
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py collectstatic --noinput &&
             uvicorn --host=0.0.0.0 --port=8000 --reload configs.asgi:application"
#              python manage.py runserver 0.0.0.0:8000"
    expose:
      - 8000
    depends_on:
      - tts-db
    env_file: .env
    profiles:
      - prod

  tts-backend-dev:
    <<: *backend
    image: ""
    container_name: tts-backend-dev
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - .:/app
    profiles:
      - development
    ports:
      - 8000:8000

  tts-db:
    image: postgres:15-alpine
    container_name: tts-db
    restart: unless-stopped
    volumes:
       - postgres_data:/var/lib/postgresql/data
    env_file: .env
    expose:
      - 5432
    profiles:
      - development
      - prod

volumes:
  postgres_data:
